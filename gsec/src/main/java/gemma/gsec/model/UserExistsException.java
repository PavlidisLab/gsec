// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!!
// Generated by: Gemma ApplicationException.vsl in andromda-java-cartridge.
// $Id: UserExistsException.java,v 1.1 2013/09/21 01:23:06 paul Exp $
//
package gemma.gsec.model;

import org.apache.commons.beanutils.PropertyUtils;

/**
 * 
 */
public class UserExistsException extends Exception {

    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -6191531408977402526L;

    /**
     * Finds the root cause of the parent exception by traveling up the exception tree
     */
    private static Throwable findRootCause( Throwable th ) {
        if ( th != null ) {
            // Lets reflectively get any JMX or EJB exception causes.
            try {
                Throwable targetException = null;
                // reflect.InvocationTargetException
                // or javax.management.ReflectionException
                String exceptionProperty = "targetException";
                if ( PropertyUtils.isReadable( th, exceptionProperty ) ) {
                    targetException = ( Throwable ) PropertyUtils.getProperty( th, exceptionProperty );
                } else {
                    exceptionProperty = "causedByException";
                    // javax.ejb.EJBException
                    if ( PropertyUtils.isReadable( th, exceptionProperty ) ) {
                        targetException = ( Throwable ) PropertyUtils.getProperty( th, exceptionProperty );
                    }
                }
                if ( targetException != null ) {
                    th = targetException;
                }
            } catch ( Exception ex ) {
                // just print the exception and continue
                ex.printStackTrace();
            }

            if ( th.getCause() != null ) {
                th = th.getCause();
                th = findRootCause( th );
            }
        }
        return th;
    }

    /**
     * The default constructor.
     */
    public UserExistsException() {
    }

    /**
     * Constructs a new instance of UserExistsException
     * 
     * @param message the throwable message.
     */
    public UserExistsException( String message ) {
        super( message );
    }

    /**
     * Constructs a new instance of UserExistsException
     * 
     * @param message the throwable message.
     * @param throwable the parent of this Throwable.
     */
    public UserExistsException( String message, Throwable throwable ) {
        super( message, findRootCause( throwable ) );
    }

    /**
     * Constructs a new instance of UserExistsException
     * 
     * @param throwable the parent Throwable
     */
    public UserExistsException( Throwable throwable ) {
        super( findRootCause( throwable ) );
    }
}
