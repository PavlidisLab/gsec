package gemma.gsec.authentication;

import org.springframework.security.core.userdetails.UsernameNotFoundException;

import javax.annotation.Nullable;
import java.util.Collection;

/**
 * Extension of {@link org.springframework.security.provisioning.UserDetailsManager}.
 *
 * @author poirigui
 */
public interface UserDetailsManager extends org.springframework.security.provisioning.UserDetailsManager {

    /**
     * @return list of all available usernames.
     */
    Collection<String> findAllUsers();

    /**
     * @param email
     * @param username
     * @param newPassword - encoded
     * @return the confirmation token they will need to use.
     */
    String changePasswordForUser( String email, String username, String newPassword );

    /**
     * Generate a token that can be used to check if the user's email is valid.
     *
     * @param username
     * @return
     */
    String generateSignupToken( String username ) throws UsernameNotFoundException;

    /**
     * Validate the token previously generated by {@link #generateSignupToken(String)}.
     *
     * @param username
     * @param key
     * @return true if okay, false otherwise
     */
    boolean validateSignupToken( String username, String key );

    /**
     * Returns a String username (the principal).
     */
    @Nullable
    String getCurrentUsername();

    boolean loggedIn();

    /**
     * Sign in the user identified
     *
     * @param userName
     * @param password
     */
    void reauthenticate( String userName, String password );

    /**
     * @param emailAddress
     * @return
     */
    boolean userWithEmailExists( String emailAddress );
}
